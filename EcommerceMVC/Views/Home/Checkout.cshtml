@model EcommerceMVC.Models.Cliente

@{
    ViewBag.Title = "Checkout";
}

<h2>Checkout</h2>

@if (Session["Carrinho"] != null)
{
    <table class="table table-bordered">
        <tr>
            <th>Produto</th>
            <th>Quantidade</th>
            <th>Preço</th>
            <th>Total Produto</th>
        </tr>
        @{
            decimal Total = 0;
        }
        @foreach (var item in (List<EcommerceMVC.Models.Cart>)Session["Carrinho"])
        {
            decimal totalProd = item.ProdutoQuantidade * item.Produto.Preco;
            Total = Total + totalProd;
            <tr>
                <td>@item.Produto.Nome</td>
                <td>@item.ProdutoQuantidade</td>
                <td>R$@item.Produto.Preco</td>
                <td>R$@totalProd</td>
            </tr>
        }
    </table>
    <div class="alert alert-success"><h4>Total: R$@Total</h4></div>

    using (Html.BeginForm("CreateCliente", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Cliente</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

}
else
{
    <div class="alert alert-danger">Desculpe! Seu carrinho esta vazio.</div>
    <div class="info">
        <a href="@Url.Action("Index", "Home")" class="btn btn-primary btn-md active" style="color:white;text-align:center;width:100%"><span class="glyphicon glyphicon-shopping-cart"> Fazer Compras</span></a>
    </div>
}
